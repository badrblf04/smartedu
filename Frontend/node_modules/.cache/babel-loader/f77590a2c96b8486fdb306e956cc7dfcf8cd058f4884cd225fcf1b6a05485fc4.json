{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\othmane\\\\smart-edu-app\\\\src\\\\components\\\\FileUploader.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUploader = ({\n  onSuccess,\n  onError,\n  allowedTypes = ['application/pdf', 'text/plain'],\n  maxSizeMB = 10,\n  extractText = false,\n  apiBaseUrl = 'http://localhost:8080' // URL de base configurable\n}) => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const handleFileChange = e => {\n    const selectedFile = e.target.files[0];\n    setError('');\n    if (!selectedFile) {\n      setError('Aucun fichier sélectionné');\n      return;\n    }\n\n    // Supprimez cette vérification\n    // if (allowedTypes && !allowedTypes.includes(selectedFile.type)) {\n    //     setError(`Type de fichier non supporté. Formats autorisés: ${allowedTypes.join(', ')}`);\n    //     return;\n    // }\n\n    if (selectedFile.size > maxSizeMB * 1024 * 1024) {\n      setError(`Fichier trop volumineux (max ${maxSizeMB}MB)`);\n      return;\n    }\n    setFile(selectedFile);\n  };\n  const handleSubmit = async () => {\n    if (!file) {\n      setError('Veuillez sélectionner un fichier valide');\n      return;\n    }\n    setIsLoading(true);\n    setError('');\n    const formData = new FormData();\n    formData.append('file', file);\n    if (extractText) {\n      formData.append('extractText', 'true');\n    }\n    try {\n      const response = await axios.post(`${apiBaseUrl}/api/uploaded-files/upload`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        onUploadProgress: progressEvent => {\n          const percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n          setProgress(percentCompleted);\n        }\n      });\n      if (onSuccess) {\n        onSuccess(response.data);\n      }\n\n      // Réinitialiser l'état après un téléversement réussi\n      setFile(null);\n      setProgress(0);\n      document.getElementById('file-input').value = ''; // Réinitialise l'input\n    } catch (err) {\n      var _err$response, _err$response$data;\n      const errorMsg = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message || 'Échec du téléversement';\n      setError(errorMsg);\n      if (onError) {\n        onError(errorMsg);\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"file-uploader-container\",\n    style: {\n      margin: '20px 0',\n      padding: '20px',\n      border: '1px dashed #ccc',\n      borderRadius: '5px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"file-input\",\n      type: \"file\",\n      onChange: handleFileChange,\n      accept: allowedTypes.join(','),\n      disabled: isLoading,\n      \"aria-label\": \"S\\xE9lectionner un fichier \\xE0 t\\xE9l\\xE9verser\",\n      style: {\n        display: 'block',\n        margin: '10px 0'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), file && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '10px 0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Fichier s\\xE9lectionn\\xE9: \", file.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Taille: \", (file.size / (1024 * 1024)).toFixed(2), \" MB\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        backgroundColor: '#f1f1f1',\n        margin: '10px 0'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: `${progress}%`,\n          height: '20px',\n          backgroundColor: progress === 100 ? '#4CAF50' : '#2196F3',\n          textAlign: 'center',\n          lineHeight: '20px',\n          color: 'white'\n        },\n        children: [progress, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      disabled: !file || isLoading,\n      style: {\n        padding: '10px 20px',\n        backgroundColor: !file || isLoading ? '#cccccc' : '#007bff',\n        color: 'white',\n        border: 'none',\n        borderRadius: '4px',\n        cursor: !file || isLoading ? 'not-allowed' : 'pointer',\n        fontSize: '16px'\n      },\n      \"aria-disabled\": !file || isLoading,\n      children: isLoading ? 'Téléversement en cours...' : 'Téléverser le fichier'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: '#d32f2f',\n        marginTop: '10px',\n        padding: '10px',\n        backgroundColor: '#ffebee',\n        borderRadius: '4px'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n};\n_s(FileUploader, \"WXPHAnGs168ZkhgAy/A4WypVa7g=\");\n_c = FileUploader;\nFileUploader.propTypes = {\n  onSuccess: PropTypes.func,\n  onError: PropTypes.func,\n  allowedTypes: PropTypes.arrayOf(PropTypes.string),\n  maxSizeMB: PropTypes.number,\n  extractText: PropTypes.bool,\n  apiBaseUrl: PropTypes.string\n};\nexport default FileUploader;\nvar _c;\n$RefreshReg$(_c, \"FileUploader\");","map":{"version":3,"names":["React","useState","PropTypes","axios","jsxDEV","_jsxDEV","FileUploader","onSuccess","onError","allowedTypes","maxSizeMB","extractText","apiBaseUrl","_s","file","setFile","error","setError","isLoading","setIsLoading","progress","setProgress","handleFileChange","e","selectedFile","target","files","size","handleSubmit","formData","FormData","append","response","post","headers","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","data","document","getElementById","value","err","_err$response","_err$response$data","errorMsg","message","className","style","margin","padding","border","borderRadius","children","id","type","onChange","accept","join","disabled","display","fileName","_jsxFileName","lineNumber","columnNumber","name","toFixed","width","backgroundColor","height","textAlign","lineHeight","color","onClick","cursor","fontSize","marginTop","_c","propTypes","func","arrayOf","string","number","bool","$RefreshReg$"],"sources":["C:/Users/othmane/smart-edu-app/src/components/FileUploader.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\n\r\nconst FileUploader = ({ \r\n  onSuccess, \r\n  onError,\r\n  allowedTypes = ['application/pdf', 'text/plain'], \r\n  maxSizeMB = 10,\r\n  extractText = false,\r\n  apiBaseUrl = 'http://localhost:8080' // URL de base configurable\r\n}) => {\r\n    const [file, setFile] = useState(null);\r\n    const [error, setError] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [progress, setProgress] = useState(0);\r\n\r\n    const handleFileChange = (e) => {\r\n        const selectedFile = e.target.files[0];\r\n        setError('');\r\n    \r\n        if (!selectedFile) {\r\n            setError('Aucun fichier sélectionné');\r\n            return;\r\n        }\r\n    \r\n        // Supprimez cette vérification\r\n        // if (allowedTypes && !allowedTypes.includes(selectedFile.type)) {\r\n        //     setError(`Type de fichier non supporté. Formats autorisés: ${allowedTypes.join(', ')}`);\r\n        //     return;\r\n        // }\r\n    \r\n        if (selectedFile.size > maxSizeMB * 1024 * 1024) {\r\n            setError(`Fichier trop volumineux (max ${maxSizeMB}MB)`);\r\n            return;\r\n        }\r\n    \r\n        setFile(selectedFile);\r\n    };\r\n\r\n    const handleSubmit = async () => {\r\n        if (!file) {\r\n            setError('Veuillez sélectionner un fichier valide');\r\n            return;\r\n        }\r\n\r\n        setIsLoading(true);\r\n        setError('');\r\n\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n        if (extractText) {\r\n            formData.append('extractText', 'true');\r\n        }\r\n\r\n        try {\r\n            const response = await axios.post(`${apiBaseUrl}/api/uploaded-files/upload`, formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                },\r\n                onUploadProgress: (progressEvent) => {\r\n                    const percentCompleted = Math.round(\r\n                        (progressEvent.loaded * 100) / progressEvent.total\r\n                    );\r\n                    setProgress(percentCompleted);\r\n                }\r\n            });\r\n\r\n            if (onSuccess) {\r\n                onSuccess(response.data);\r\n            }\r\n            \r\n            // Réinitialiser l'état après un téléversement réussi\r\n            setFile(null);\r\n            setProgress(0);\r\n            document.getElementById('file-input').value = ''; // Réinitialise l'input\r\n        } catch (err) {\r\n            const errorMsg = err.response?.data?.message || \r\n                           err.message || \r\n                           'Échec du téléversement';\r\n            setError(errorMsg);\r\n            \r\n            if (onError) {\r\n                onError(errorMsg);\r\n            }\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"file-uploader-container\" style={{ \r\n            margin: '20px 0',\r\n            padding: '20px',\r\n            border: '1px dashed #ccc',\r\n            borderRadius: '5px'\r\n        }}>\r\n            <input\r\n                id=\"file-input\"\r\n                type=\"file\"\r\n                onChange={handleFileChange}\r\n                accept={allowedTypes.join(',')}\r\n                disabled={isLoading}\r\n                aria-label=\"Sélectionner un fichier à téléverser\"\r\n                style={{ display: 'block', margin: '10px 0' }}\r\n            />\r\n\r\n            {file && (\r\n                <div style={{ margin: '10px 0' }}>\r\n                    <p>Fichier sélectionné: {file.name}</p>\r\n                    <p>Taille: {(file.size / (1024 * 1024)).toFixed(2)} MB</p>\r\n                </div>\r\n            )}\r\n\r\n            {isLoading && (\r\n                <div style={{ width: '100%', backgroundColor: '#f1f1f1', margin: '10px 0' }}>\r\n                    <div \r\n                        style={{ \r\n                            width: `${progress}%`,\r\n                            height: '20px',\r\n                            backgroundColor: progress === 100 ? '#4CAF50' : '#2196F3',\r\n                            textAlign: 'center',\r\n                            lineHeight: '20px',\r\n                            color: 'white'\r\n                        }}\r\n                    >\r\n                        {progress}%\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            <button\r\n                onClick={handleSubmit}\r\n                disabled={!file || isLoading}\r\n                style={{\r\n                    padding: '10px 20px',\r\n                    backgroundColor: !file || isLoading ? '#cccccc' : '#007bff',\r\n                    color: 'white',\r\n                    border: 'none',\r\n                    borderRadius: '4px',\r\n                    cursor: !file || isLoading ? 'not-allowed' : 'pointer',\r\n                    fontSize: '16px'\r\n                }}\r\n                aria-disabled={!file || isLoading}\r\n            >\r\n                {isLoading ? 'Téléversement en cours...' : 'Téléverser le fichier'}\r\n            </button>\r\n\r\n            {error && (\r\n                <p style={{ \r\n                    color: '#d32f2f', \r\n                    marginTop: '10px',\r\n                    padding: '10px',\r\n                    backgroundColor: '#ffebee',\r\n                    borderRadius: '4px'\r\n                }}>\r\n                    {error}\r\n                </p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nFileUploader.propTypes = {\r\n    onSuccess: PropTypes.func,\r\n    onError: PropTypes.func,\r\n    allowedTypes: PropTypes.arrayOf(PropTypes.string),\r\n    maxSizeMB: PropTypes.number,\r\n    extractText: PropTypes.bool,\r\n    apiBaseUrl: PropTypes.string\r\n};\r\n\r\nexport default FileUploader;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}