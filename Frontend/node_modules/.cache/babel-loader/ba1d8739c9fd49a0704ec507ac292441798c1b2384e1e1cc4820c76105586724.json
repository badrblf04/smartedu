{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\badrb\\\\IdeaProjects\\\\Smart-education-platforme\\\\Frontend\\\\src\\\\components\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  const [form, setForm] = useState({\n    nom: \"\",\n    prenom: \"\",\n    email: \"\",\n    motDePasse: \"\",\n    confirm: \"\"\n  });\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (form.motDePasse !== form.confirm) return alert(\"Les mots de passe ne correspondent pas.\");\n    await fetch(\"http://localhost:8080/api/auth/register\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(form)\n    }).then(res => res.text()).then(alert);\n  };\n\n  // Fonction pour gérer les changements dans les inputs\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setForm(prevForm => ({\n      ...prevForm,\n      [name]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"nom\",\n        children: \"Nom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"nom\",\n        name: \"nom\",\n        value: form.nom,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"prenom\",\n        children: \"Pr\\xE9nom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"prenom\",\n        name: \"prenom\",\n        value: form.prenom,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        name: \"email\",\n        value: form.email,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"motDePasse\",\n        children: \"Mot de passe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"motDePasse\",\n        name: \"motDePasse\",\n        value: form.motDePasse,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"confirm\",\n        children: \"Confirmer le mot de passe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"confirm\",\n        name: \"confirm\",\n        value: form.confirm,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"S'inscrire\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_s(Register, \"sfd1tizsAUVVYliN6hzx0vHyQiQ=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Register","_s","form","setForm","nom","prenom","email","motDePasse","confirm","handleSubmit","e","preventDefault","alert","fetch","method","headers","body","JSON","stringify","then","res","text","handleChange","name","value","target","prevForm","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","required","_c","$RefreshReg$"],"sources":["C:/Users/badrb/IdeaProjects/Smart-education-platforme/Frontend/src/components/Login.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction Register() {\r\n    const [form, setForm] = useState({ nom: \"\", prenom: \"\", email: \"\", motDePasse: \"\", confirm: \"\" });\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (form.motDePasse !== form.confirm) return alert(\"Les mots de passe ne correspondent pas.\");\r\n\r\n        await fetch(\"http://localhost:8080/api/auth/register\", {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(form)\r\n        })\r\n            .then(res => res.text())\r\n            .then(alert);\r\n    };\r\n\r\n    // Fonction pour gérer les changements dans les inputs\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setForm(prevForm => ({\r\n            ...prevForm,\r\n            [name]: value\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <label htmlFor=\"nom\">Nom</label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"nom\"\r\n                    name=\"nom\"\r\n                    value={form.nom}\r\n                    onChange={handleChange}\r\n                    required\r\n                />\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"prenom\">Prénom</label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"prenom\"\r\n                    name=\"prenom\"\r\n                    value={form.prenom}\r\n                    onChange={handleChange}\r\n                    required\r\n                />\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input\r\n                    type=\"email\"\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    value={form.email}\r\n                    onChange={handleChange}\r\n                    required\r\n                />\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"motDePasse\">Mot de passe</label>\r\n                <input\r\n                    type=\"password\"\r\n                    id=\"motDePasse\"\r\n                    name=\"motDePasse\"\r\n                    value={form.motDePasse}\r\n                    onChange={handleChange}\r\n                    required\r\n                />\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"confirm\">Confirmer le mot de passe</label>\r\n                <input\r\n                    type=\"password\"\r\n                    id=\"confirm\"\r\n                    name=\"confirm\"\r\n                    value={form.confirm}\r\n                    onChange={handleChange}\r\n                    required\r\n                />\r\n            </div>\r\n            <button type=\"submit\">S'inscrire</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Register;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}