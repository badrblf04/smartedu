{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:8080/api'; // Changez cette URL si votre API est hébergée ailleurs\n\nexport const uploadFile = async (file, choice) => {\n  // Liste des choix autorisés\n  const validChoices = ['uploaded-files/upload', 'quizes/generate', 'problems/generate'];\n  if (!validChoices.includes(choice)) {\n    throw new Error(`Choix invalide : ${choice}`);\n  }\n\n  // Validation du fichier\n  if (!file) {\n    throw new Error(\"Le fichier est requis et ne peut pas être vide.\");\n  }\n  const formData = new FormData();\n  formData.append('file', file);\n  try {\n    const response = await axios.post(`${API_BASE_URL}/api/${encodeURIComponent(choice)}`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response2, _error$response2$data;\n    console.error('Erreur lors de l\\'upload du fichier :', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Une erreur est survenue lors de l'upload du fichier.\");\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","uploadFile","file","choice","validChoices","includes","Error","formData","FormData","append","response","post","encodeURIComponent","headers","data","error","_error$response","_error$response2","_error$response2$data","console","message"],"sources":["C:/Users/badrb/IdeaProjects/Smart-education-platforme/Frontend/src/services/apiService.jsx"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = 'http://localhost:8080/api'; // Changez cette URL si votre API est hébergée ailleurs\r\n\r\nexport const uploadFile = async (file, choice) => {\r\n    // Liste des choix autorisés\r\n    const validChoices = ['uploaded-files/upload', 'quizes/generate', 'problems/generate'];\r\n\r\n    if (!validChoices.includes(choice)) {\r\n        throw new Error(`Choix invalide : ${choice}`);\r\n    }\r\n\r\n    // Validation du fichier\r\n    if (!file) {\r\n        throw new Error(\"Le fichier est requis et ne peut pas être vide.\");\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n\r\n    try {\r\n        const response = await axios.post(`${API_BASE_URL}/api/${encodeURIComponent(choice)}`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data',\r\n            },\r\n        });\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Erreur lors de l\\'upload du fichier :', error.response?.data || error.message);\r\n        throw new Error(error.response?.data?.message || \"Une erreur est survenue lors de l'upload du fichier.\");\r\n    }\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,2BAA2B,CAAC,CAAC;;AAElD,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAOC,IAAI,EAAEC,MAAM,KAAK;EAC9C;EACA,MAAMC,YAAY,GAAG,CAAC,uBAAuB,EAAE,iBAAiB,EAAE,mBAAmB,CAAC;EAEtF,IAAI,CAACA,YAAY,CAACC,QAAQ,CAACF,MAAM,CAAC,EAAE;IAChC,MAAM,IAAIG,KAAK,CAAC,oBAAoBH,MAAM,EAAE,CAAC;EACjD;;EAEA;EACA,IAAI,CAACD,IAAI,EAAE;IACP,MAAM,IAAII,KAAK,CAAC,iDAAiD,CAAC;EACtE;EAEA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEP,IAAI,CAAC;EAE7B,IAAI;IACA,MAAMQ,QAAQ,GAAG,MAAMX,KAAK,CAACY,IAAI,CAAC,GAAGX,YAAY,QAAQY,kBAAkB,CAACT,MAAM,CAAC,EAAE,EAAEI,QAAQ,EAAE;MAC7FM,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC;IACF,OAAOH,QAAQ,CAACI,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA,EAAAC,gBAAA,EAAAC,qBAAA;IACZC,OAAO,CAACJ,KAAK,CAAC,uCAAuC,EAAE,EAAAC,eAAA,GAAAD,KAAK,CAACL,QAAQ,cAAAM,eAAA,uBAAdA,eAAA,CAAgBF,IAAI,KAAIC,KAAK,CAACK,OAAO,CAAC;IAC7F,MAAM,IAAId,KAAK,CAAC,EAAAW,gBAAA,GAAAF,KAAK,CAACL,QAAQ,cAAAO,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBH,IAAI,cAAAI,qBAAA,uBAApBA,qBAAA,CAAsBE,OAAO,KAAI,sDAAsD,CAAC;EAC5G;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}