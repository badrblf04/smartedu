{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\othmane\\\\smart-edu-app\\\\src\\\\components\\\\FileUploader.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUploader = ({\n  onUpload,\n  allowedTypes,\n  maxSizeMB = 10\n}) => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const handleFileChange = e => {\n    const selectedFile = e.target.files[0];\n\n    // Validation du fichier\n    if (!selectedFile) {\n      setError('Aucun fichier sélectionné');\n      return;\n    }\n\n    // Vérification du type de fichier\n    if (allowedTypes && !allowedTypes.includes(selectedFile.type)) {\n      setError(`Type de fichier non supporté. Formats autorisés: ${allowedTypes.join(', ')}`);\n      return;\n    }\n\n    // Vérification de la taille\n    if (selectedFile.size > maxSizeMB * 1024 * 1024) {\n      setError(`Fichier trop volumineux (max ${maxSizeMB}MB)`);\n      return;\n    }\n    setFile(selectedFile);\n    setError('');\n  };\n  const handleFileUpload = async file => {\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    try {\n      const response = await axios.post(\"http://localhost:8080/api/quizes/generate\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      console.log(\"Réponse du backend :\", response.data); // Vérifiez ici\n      alert(\"Téléversement réussi !\");\n    } catch (error) {\n      console.error(\"Erreur lors de l'envoi du fichier :\", error);\n      alert(\"Échec du téléversement !\");\n    }\n  };\n  const handleSubmit = async () => {\n    if (!file) {\n      setError('Veuillez sélectionner un fichier valide');\n      return;\n    }\n    setIsLoading(true);\n    setError('');\n    try {\n      await onUpload(file);\n    } catch (err) {\n      setError(err.message || 'Échec du téléversement');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"file-uploader-container\",\n    style: {\n      margin: '20px 0'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange,\n      accept: allowedTypes === null || allowedTypes === void 0 ? void 0 : allowedTypes.join(','),\n      disabled: isLoading,\n      style: {\n        display: 'block',\n        margin: '10px 0'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      disabled: !file || isLoading,\n      style: {\n        padding: '8px 16px',\n        backgroundColor: isLoading ? '#ccc' : '#007bff',\n        color: 'white',\n        border: 'none',\n        borderRadius: '4px',\n        cursor: !file || isLoading ? 'not-allowed' : 'pointer'\n      },\n      children: isLoading ? 'Téléversement en cours...' : 'Téléverser'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red',\n        marginTop: '10px'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n_s(FileUploader, \"vZSZd1cEyGFmFCGOpVIwInUB1m0=\");\n_c = FileUploader;\nFileUploader.propTypes = {\n  onUpload: PropTypes.func.isRequired,\n  allowedTypes: PropTypes.arrayOf(PropTypes.string),\n  maxSizeMB: PropTypes.number\n};\nexport default FileUploader;\nvar _c;\n$RefreshReg$(_c, \"FileUploader\");","map":{"version":3,"names":["React","useState","PropTypes","jsxDEV","_jsxDEV","FileUploader","onUpload","allowedTypes","maxSizeMB","_s","file","setFile","error","setError","isLoading","setIsLoading","handleFileChange","e","selectedFile","target","files","includes","type","join","size","handleFileUpload","formData","FormData","append","response","axios","post","headers","console","log","data","alert","handleSubmit","err","message","className","style","margin","children","onChange","accept","disabled","display","fileName","_jsxFileName","lineNumber","columnNumber","onClick","padding","backgroundColor","color","border","borderRadius","cursor","marginTop","_c","propTypes","func","isRequired","arrayOf","string","number","$RefreshReg$"],"sources":["C:/Users/othmane/smart-edu-app/src/components/FileUploader.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FileUploader = ({ onUpload, allowedTypes, maxSizeMB = 10 }) => {\r\n    const [file, setFile] = useState(null);\r\n    const [error, setError] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const handleFileChange = (e) => {\r\n        const selectedFile = e.target.files[0];\r\n        \r\n        // Validation du fichier\r\n        if (!selectedFile) {\r\n            setError('Aucun fichier sélectionné');\r\n            return;\r\n        }\r\n\r\n        // Vérification du type de fichier\r\n        if (allowedTypes && !allowedTypes.includes(selectedFile.type)) {\r\n            setError(`Type de fichier non supporté. Formats autorisés: ${allowedTypes.join(', ')}`);\r\n            return;\r\n        }\r\n\r\n        // Vérification de la taille\r\n        if (selectedFile.size > maxSizeMB * 1024 * 1024) {\r\n            setError(`Fichier trop volumineux (max ${maxSizeMB}MB)`);\r\n            return;\r\n        }\r\n\r\n        setFile(selectedFile);\r\n        setError('');\r\n    };\r\n\r\n    const handleFileUpload = async (file) => {\r\n        const formData = new FormData();\r\n        formData.append(\"file\", file);\r\n      \r\n        try {\r\n          const response = await axios.post(\"http://localhost:8080/api/quizes/generate\", formData, {\r\n            headers: {\r\n              \"Content-Type\": \"multipart/form-data\",\r\n            },\r\n          });\r\n          console.log(\"Réponse du backend :\", response.data); // Vérifiez ici\r\n          alert(\"Téléversement réussi !\");\r\n        } catch (error) {\r\n          console.error(\"Erreur lors de l'envoi du fichier :\", error);\r\n          alert(\"Échec du téléversement !\");\r\n        }\r\n      };\r\n\r\n    const handleSubmit = async () => {\r\n        if (!file) {\r\n            setError('Veuillez sélectionner un fichier valide');\r\n            return;\r\n        }\r\n\r\n        setIsLoading(true);\r\n        setError('');\r\n\r\n        try {\r\n            await onUpload(file);\r\n        } catch (err) {\r\n            setError(err.message || 'Échec du téléversement');\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"file-uploader-container\" style={{ margin: '20px 0' }}>\r\n            <input \r\n                type=\"file\" \r\n                onChange={handleFileChange}\r\n                accept={allowedTypes?.join(',')}\r\n                disabled={isLoading}\r\n                style={{ display: 'block', margin: '10px 0' }}\r\n            />\r\n            \r\n            <button \r\n                onClick={handleSubmit}\r\n                disabled={!file || isLoading}\r\n                style={{\r\n                    padding: '8px 16px',\r\n                    backgroundColor: isLoading ? '#ccc' : '#007bff',\r\n                    color: 'white',\r\n                    border: 'none',\r\n                    borderRadius: '4px',\r\n                    cursor: !file || isLoading ? 'not-allowed' : 'pointer'\r\n                }}\r\n            >\r\n                {isLoading ? 'Téléversement en cours...' : 'Téléverser'}\r\n            </button>\r\n            \r\n            {error && (\r\n                <p style={{ color: 'red', marginTop: '10px' }}>\r\n                    {error}\r\n                </p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nFileUploader.propTypes = {\r\n    onUpload: PropTypes.func.isRequired,\r\n    allowedTypes: PropTypes.arrayOf(PropTypes.string),\r\n    maxSizeMB: PropTypes.number\r\n};\r\n\r\nexport default FileUploader;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}